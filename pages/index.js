import Head from 'next/head';
import { useEffect, useState } from 'react';

import Nav from '@/components/layout/nav/nav';
import About from 'components/about/about';
import ProjectsList from '@/components/projects/projectsList';
import BlogList from '@/components/projects/blogList';
import Resume from '@/components/resume/resume';
import Contact from '@/components/contact/contact';
import Footer from '@/components/layout/footer/footer';

export default function Home({ projects, posts, aboutData }) {
  const [fetchedProjects, setFetchedProjects] = useState([]);
  const [fetchedPosts, setFetchedPosts] = useState([]);
  const [fetchedAuthor, setFetchedAuthor] = useState({});

  useEffect(() => {
    setFetchedProjects(projects.posts);
    setFetchedPosts(posts.posts);
    setFetchedAuthor(aboutData.authors[0]);
  }, [projects, posts, aboutData]);

  return (
    <>
      <Head>
        <title>ZaxCode</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Nav />
      <About author={fetchedAuthor} />
      <Resume />
      <ProjectsList projects={fetchedProjects} hasButton={true} />
      <BlogList posts={fetchedPosts} hasButton={true} />
      <Contact />
      <Footer />
    </>
  );
}

export async function getStaticProps() {
  const url = process.env.API_URL;
  const key = process.env.API_KEY;

  const projects = await fetch(
    `${url}/ghost/api/content/posts/?key=${key}&filter=tag:Projects&order=published_at DESC&include=tags`
  )
    .then((res) => {
      return res.json();
    })
    .then((data) => {
      return data;
    });

  const posts = await fetch(
    `${url}/ghost/api/content/posts/?key=${key}&filter=tag:Development-Process&order=published_at DESC&limit=4`
  )
    .then((res) => {
      return res.json();
    })
    .then((data) => {
      return data;
    });

  const aboutData = await fetch(`${url}/ghost/api/content/authors/?key=${key}`)
    .then((res) => {
      return res.json();
    })
    .then((data) => {
      return data;
    });
  // By returning { props: { posts } }, the Blog component
  // will receive `posts` as a prop at build time
  return {
    props: {
      projects,
      posts,
      aboutData,
    },
  };
}
